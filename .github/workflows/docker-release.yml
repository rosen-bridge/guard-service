name: Build and Push Docker Image

on:
  release:
    types: [published]
  push:
    branches:
      - dev

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Release From tss-api
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          repo: 'rosen-bridge/sign-protocols'
          version: 'latest'
          regex: true
          file: 'rosenTss-linux-*'
          target: './bin/'

      - name: Download Contracts
        uses: rosen-bridge/operation@V0.1
        with:
          type: ${{ vars.RELEASE_NAME }}
          tag: ${{ vars.RELEASE_TAG }}

      - name: Move the Files
        run: |
          mv ./docker/production.yaml ./config/
          mv ./docker/custom-environment-variables.yaml ./config/
          7z x ./bin/rosenTss-linux-* -obin/ && rm -rf ./bin/*.zip
          mv ./bin/rosenTss-* ./bin/rosenTss
          mkdir -p ./config/rosen/
          mv {tokens,contracts}*.json ./config/rosen/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ vars.PLATFORM_LIST || 'linux/amd64' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: rosen-bridge
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Metadata action
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/rosen-bridge/guard-service

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ vars.PLATFORM_LIST || 'linux/amd64' }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
