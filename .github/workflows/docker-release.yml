name: Build and Push Docker Image
on:
  release:
    types:
      - created

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions:
          - latest
          - ${{ github.ref_name }}

    steps:   
      - name: Checkout the Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
     
      - name: Download Release From tss-api
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          repo: 'rosen-bridge/tss-api'
          version: 'latest'
          regex: true
          file: "rosenTss-*"
          target: "./bin/"

      - name: Fetch Latest Version of Contract
        id: version
        run: echo "download_version=$(echo $(curl -s https://api.github.com/repos/rosen-bridge/contract/releases) | jq -r 'max_by(.published_at).name')" >> $GITHUB_OUTPUT

      - name: Download Contracts Files
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          repo: 'rosen-bridge/contract'
          version: 'tags/${{ steps.version.outputs.download_version }}'
          regex: true
          file: ".*\\-${{ secrets.RELEASE_NAME }}-${{ steps.version.outputs.download_version }}.json"
          token: ${{ secrets.GITHUB_TOKEN }}
          target: './config/'

      - name: Move the Files
        run: |
          mv ./docker/production.yml ./config/
          mv ./docker/custom-environment-variables.yml ./config/
          mkdir -p bin/conf/ && mv ./docker/conf.env ./bin/conf/
          mv ./bin/rosenTss-* ./bin/rosenTss
          mv ./config/tokensMap-${{ secrets.RELEASE_NAME }}-${{ steps.version.outputs.download_version }}.json ./config/tokens.json
          
          mkdir -p ./config/rosen/
          cd ./config/
          files=$(ls contracts-*)
          for file in $files; do
            new_name=$(echo "$file" | awk -F'-' '{print $1"-"$2"-mainnet.json"}')
            mv "$file" "rosen/$new_name"
          done

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ts-guard-service:${{ matrix.versions }}
